{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar exp = require( '@stdlib/math-base-special-exp' );\nvar expm1 = require( '@stdlib/math-base-special-expm1' );\n\n\n// MAIN //\n\n/**\n* Returns the variance of a Planck distribution.\n*\n* @param {PositiveNumber} lambda - shape parameter\n* @returns {PositiveNumber} variance\n*\n* @example\n* var v = variance( 0.1 );\n* // returns ~99.9167\n*\n* @example\n* var v = variance( 1.5 );\n* // returns ~0.3697\n*\n* @example\n* var v = variance( -1.0 );\n* // returns NaN\n*\n* @example\n* var v = variance( NaN );\n* // returns NaN\n*/\nfunction variance( lambda ) {\n\tvar temp;\n\tif ( isnan( lambda ) || lambda <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\ttemp = expm1( -lambda );\n\treturn exp( -lambda ) / ( temp * temp );\n}\n\n\n// EXPORTS //\n\nmodule.exports = variance;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Planck distribution variance.\n*\n* @module @stdlib/stats-base-dists-planck-variance\n*\n* @example\n* var variance = require( '@stdlib/stats-base-dists-planck-variance' );\n*\n* var v = variance( 0.1 );\n* // returns ~99.9167\n*\n* v = variance( 1.5 );\n* // returns ~0.3697\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAM,QAAS,+BAAgC,EAC/CC,EAAQ,QAAS,iCAAkC,EA2BvD,SAASC,EAAUC,EAAS,CAC3B,IAAIC,EACJ,OAAKL,EAAOI,CAAO,GAAKA,GAAU,EAC1B,KAERC,EAAOH,EAAO,CAACE,CAAO,EACfH,EAAK,CAACG,CAAO,GAAMC,EAAOA,GAClC,CAKAN,EAAO,QAAUI,IC1BjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isnan", "exp", "expm1", "variance", "lambda", "temp", "main"]
}
